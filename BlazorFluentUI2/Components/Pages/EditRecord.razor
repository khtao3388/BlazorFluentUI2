@page "/bloodpressures/edit"
@inject BloodPressureContext context
@inject NavigationManager navigationManager

<h3>EditRecord</h3>

<EditForm method="post" FormName="Edit" Model="bloodPressureDto" OnValidSubmit="UpdateBloodPressure">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger" />

    <div class="mb-3">
        <label for="Id" class="form-label">ID</label>
        <InputNumber id="Id" @bind-Value="bloodPressureDto.Id" class="form-control" />
        <ValidationMessage For="() => bloodPressureDto.Id" class="text-danger" />

        <label for="date" class="form-label">Date and Time</label>
        <InputDate id="date" @bind-Value="bloodPressureDto.DateAndTime" class="form-control" />
        <ValidationMessage For="() => bloodPressureDto.DateAndTime" class="text-danger" />

        <label for="systolic" class="form-label">Systolic</label>
        <InputNumber id="systolic" @bind-Value="bloodPressureDto.Systolic" class="form-control" />
        <ValidationMessage For="() => bloodPressureDto.Systolic" class="text-danger" />

        <label for="diastolic" class="form-label">Dialatic:</label>
        <InputNumber id="diastolic" @bind-Value="bloodPressureDto.Diastolic" class="form-control" />
        <ValidationMessage For="() => bloodPressureDto.Diastolic" class="text-danger" />

        <label for="heartrate" class="form-label">HeartRate:</label>
        <InputNumber id="heartrate" @bind-Value="bloodPressureDto.HeartRate" class="form-control" />
        <ValidationMessage For="() => bloodPressureDto.HeartRate" class="text-danger" />

    </div>
    <button type="submit" class="btn btn-primary">Save</button>


</EditForm>


<div>
    <a href="/bloodpressures">Back to List</a>
</div>

@code {

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    public BloodPressure? bloodPressureDto;

    protected override void OnParametersSet()
    {
        if (bloodPressureDto == null)
        {
        bloodPressureDto = context.BloodPressures.FirstOrDefault(m => m.Id == Id);
        }
    }






    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see https://aka.ms/RazorPagesCRUD.
    public void UpdateBloodPressure()
    {

        context.Attach(bloodPressureDto).State = EntityState.Modified;
        
        context.SaveChanges();

        navigationManager.NavigateTo("/bloodpressures");

    }
 
        


}
